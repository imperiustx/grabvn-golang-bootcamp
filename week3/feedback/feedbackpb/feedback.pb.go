// Code generated by protoc-gen-go. DO NOT EDIT.
// source: feedback/feedbackpb/feedback.proto

package feedbackpb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type PassengerFeedback struct {
	BookingCode          string   `protobuf:"bytes,1,opt,name=bookingCode,proto3" json:"bookingCode,omitempty"`
	PassengerID          int32    `protobuf:"varint,2,opt,name=passengerID,proto3" json:"passengerID,omitempty"`
	Feedback             string   `protobuf:"bytes,3,opt,name=feedback,proto3" json:"feedback,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PassengerFeedback) Reset()         { *m = PassengerFeedback{} }
func (m *PassengerFeedback) String() string { return proto.CompactTextString(m) }
func (*PassengerFeedback) ProtoMessage()    {}
func (*PassengerFeedback) Descriptor() ([]byte, []int) {
	return fileDescriptor_7537c9ecc7dea878, []int{0}
}

func (m *PassengerFeedback) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PassengerFeedback.Unmarshal(m, b)
}
func (m *PassengerFeedback) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PassengerFeedback.Marshal(b, m, deterministic)
}
func (m *PassengerFeedback) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PassengerFeedback.Merge(m, src)
}
func (m *PassengerFeedback) XXX_Size() int {
	return xxx_messageInfo_PassengerFeedback.Size(m)
}
func (m *PassengerFeedback) XXX_DiscardUnknown() {
	xxx_messageInfo_PassengerFeedback.DiscardUnknown(m)
}

var xxx_messageInfo_PassengerFeedback proto.InternalMessageInfo

func (m *PassengerFeedback) GetBookingCode() string {
	if m != nil {
		return m.BookingCode
	}
	return ""
}

func (m *PassengerFeedback) GetPassengerID() int32 {
	if m != nil {
		return m.PassengerID
	}
	return 0
}

func (m *PassengerFeedback) GetFeedback() string {
	if m != nil {
		return m.Feedback
	}
	return ""
}

type AddPassengerFeedbackRequest struct {
	NewPassengerFeedback *PassengerFeedback `protobuf:"bytes,1,opt,name=newPassengerFeedback,proto3" json:"newPassengerFeedback,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *AddPassengerFeedbackRequest) Reset()         { *m = AddPassengerFeedbackRequest{} }
func (m *AddPassengerFeedbackRequest) String() string { return proto.CompactTextString(m) }
func (*AddPassengerFeedbackRequest) ProtoMessage()    {}
func (*AddPassengerFeedbackRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_7537c9ecc7dea878, []int{1}
}

func (m *AddPassengerFeedbackRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddPassengerFeedbackRequest.Unmarshal(m, b)
}
func (m *AddPassengerFeedbackRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddPassengerFeedbackRequest.Marshal(b, m, deterministic)
}
func (m *AddPassengerFeedbackRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddPassengerFeedbackRequest.Merge(m, src)
}
func (m *AddPassengerFeedbackRequest) XXX_Size() int {
	return xxx_messageInfo_AddPassengerFeedbackRequest.Size(m)
}
func (m *AddPassengerFeedbackRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AddPassengerFeedbackRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AddPassengerFeedbackRequest proto.InternalMessageInfo

func (m *AddPassengerFeedbackRequest) GetNewPassengerFeedback() *PassengerFeedback {
	if m != nil {
		return m.NewPassengerFeedback
	}
	return nil
}

type AddPassengerFeedbackResponse struct {
	NewFeedback          string   `protobuf:"bytes,1,opt,name=newFeedback,proto3" json:"newFeedback,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddPassengerFeedbackResponse) Reset()         { *m = AddPassengerFeedbackResponse{} }
func (m *AddPassengerFeedbackResponse) String() string { return proto.CompactTextString(m) }
func (*AddPassengerFeedbackResponse) ProtoMessage()    {}
func (*AddPassengerFeedbackResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_7537c9ecc7dea878, []int{2}
}

func (m *AddPassengerFeedbackResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddPassengerFeedbackResponse.Unmarshal(m, b)
}
func (m *AddPassengerFeedbackResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddPassengerFeedbackResponse.Marshal(b, m, deterministic)
}
func (m *AddPassengerFeedbackResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddPassengerFeedbackResponse.Merge(m, src)
}
func (m *AddPassengerFeedbackResponse) XXX_Size() int {
	return xxx_messageInfo_AddPassengerFeedbackResponse.Size(m)
}
func (m *AddPassengerFeedbackResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AddPassengerFeedbackResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AddPassengerFeedbackResponse proto.InternalMessageInfo

func (m *AddPassengerFeedbackResponse) GetNewFeedback() string {
	if m != nil {
		return m.NewFeedback
	}
	return ""
}

type GetPassengerFeedbackIDRequest struct {
	PassengerID          int32    `protobuf:"varint,1,opt,name=passengerID,proto3" json:"passengerID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetPassengerFeedbackIDRequest) Reset()         { *m = GetPassengerFeedbackIDRequest{} }
func (m *GetPassengerFeedbackIDRequest) String() string { return proto.CompactTextString(m) }
func (*GetPassengerFeedbackIDRequest) ProtoMessage()    {}
func (*GetPassengerFeedbackIDRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_7537c9ecc7dea878, []int{3}
}

func (m *GetPassengerFeedbackIDRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetPassengerFeedbackIDRequest.Unmarshal(m, b)
}
func (m *GetPassengerFeedbackIDRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetPassengerFeedbackIDRequest.Marshal(b, m, deterministic)
}
func (m *GetPassengerFeedbackIDRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetPassengerFeedbackIDRequest.Merge(m, src)
}
func (m *GetPassengerFeedbackIDRequest) XXX_Size() int {
	return xxx_messageInfo_GetPassengerFeedbackIDRequest.Size(m)
}
func (m *GetPassengerFeedbackIDRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetPassengerFeedbackIDRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetPassengerFeedbackIDRequest proto.InternalMessageInfo

func (m *GetPassengerFeedbackIDRequest) GetPassengerID() int32 {
	if m != nil {
		return m.PassengerID
	}
	return 0
}

type GetPassengerFeedbackIDResponse struct {
	FeedbackID           []*PassengerFeedback `protobuf:"bytes,1,rep,name=feedbackID,proto3" json:"feedbackID,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *GetPassengerFeedbackIDResponse) Reset()         { *m = GetPassengerFeedbackIDResponse{} }
func (m *GetPassengerFeedbackIDResponse) String() string { return proto.CompactTextString(m) }
func (*GetPassengerFeedbackIDResponse) ProtoMessage()    {}
func (*GetPassengerFeedbackIDResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_7537c9ecc7dea878, []int{4}
}

func (m *GetPassengerFeedbackIDResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetPassengerFeedbackIDResponse.Unmarshal(m, b)
}
func (m *GetPassengerFeedbackIDResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetPassengerFeedbackIDResponse.Marshal(b, m, deterministic)
}
func (m *GetPassengerFeedbackIDResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetPassengerFeedbackIDResponse.Merge(m, src)
}
func (m *GetPassengerFeedbackIDResponse) XXX_Size() int {
	return xxx_messageInfo_GetPassengerFeedbackIDResponse.Size(m)
}
func (m *GetPassengerFeedbackIDResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetPassengerFeedbackIDResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetPassengerFeedbackIDResponse proto.InternalMessageInfo

func (m *GetPassengerFeedbackIDResponse) GetFeedbackID() []*PassengerFeedback {
	if m != nil {
		return m.FeedbackID
	}
	return nil
}

type GetBookingCodeRequest struct {
	BookingCode          string   `protobuf:"bytes,1,opt,name=bookingCode,proto3" json:"bookingCode,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetBookingCodeRequest) Reset()         { *m = GetBookingCodeRequest{} }
func (m *GetBookingCodeRequest) String() string { return proto.CompactTextString(m) }
func (*GetBookingCodeRequest) ProtoMessage()    {}
func (*GetBookingCodeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_7537c9ecc7dea878, []int{5}
}

func (m *GetBookingCodeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetBookingCodeRequest.Unmarshal(m, b)
}
func (m *GetBookingCodeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetBookingCodeRequest.Marshal(b, m, deterministic)
}
func (m *GetBookingCodeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetBookingCodeRequest.Merge(m, src)
}
func (m *GetBookingCodeRequest) XXX_Size() int {
	return xxx_messageInfo_GetBookingCodeRequest.Size(m)
}
func (m *GetBookingCodeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetBookingCodeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetBookingCodeRequest proto.InternalMessageInfo

func (m *GetBookingCodeRequest) GetBookingCode() string {
	if m != nil {
		return m.BookingCode
	}
	return ""
}

type GetBookingCodeResponse struct {
	PassengerFeedback    *PassengerFeedback `protobuf:"bytes,1,opt,name=passengerFeedback,proto3" json:"passengerFeedback,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *GetBookingCodeResponse) Reset()         { *m = GetBookingCodeResponse{} }
func (m *GetBookingCodeResponse) String() string { return proto.CompactTextString(m) }
func (*GetBookingCodeResponse) ProtoMessage()    {}
func (*GetBookingCodeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_7537c9ecc7dea878, []int{6}
}

func (m *GetBookingCodeResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetBookingCodeResponse.Unmarshal(m, b)
}
func (m *GetBookingCodeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetBookingCodeResponse.Marshal(b, m, deterministic)
}
func (m *GetBookingCodeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetBookingCodeResponse.Merge(m, src)
}
func (m *GetBookingCodeResponse) XXX_Size() int {
	return xxx_messageInfo_GetBookingCodeResponse.Size(m)
}
func (m *GetBookingCodeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetBookingCodeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetBookingCodeResponse proto.InternalMessageInfo

func (m *GetBookingCodeResponse) GetPassengerFeedback() *PassengerFeedback {
	if m != nil {
		return m.PassengerFeedback
	}
	return nil
}

type DeleteByPassengerFeedbackIDRequest struct {
	PassengerID          int32    `protobuf:"varint,1,opt,name=passengerID,proto3" json:"passengerID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteByPassengerFeedbackIDRequest) Reset()         { *m = DeleteByPassengerFeedbackIDRequest{} }
func (m *DeleteByPassengerFeedbackIDRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteByPassengerFeedbackIDRequest) ProtoMessage()    {}
func (*DeleteByPassengerFeedbackIDRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_7537c9ecc7dea878, []int{7}
}

func (m *DeleteByPassengerFeedbackIDRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteByPassengerFeedbackIDRequest.Unmarshal(m, b)
}
func (m *DeleteByPassengerFeedbackIDRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteByPassengerFeedbackIDRequest.Marshal(b, m, deterministic)
}
func (m *DeleteByPassengerFeedbackIDRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteByPassengerFeedbackIDRequest.Merge(m, src)
}
func (m *DeleteByPassengerFeedbackIDRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteByPassengerFeedbackIDRequest.Size(m)
}
func (m *DeleteByPassengerFeedbackIDRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteByPassengerFeedbackIDRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteByPassengerFeedbackIDRequest proto.InternalMessageInfo

func (m *DeleteByPassengerFeedbackIDRequest) GetPassengerID() int32 {
	if m != nil {
		return m.PassengerID
	}
	return 0
}

type DeleteByPassengerFeedbackIDResponse struct {
	PassengerFeedback    *PassengerFeedback `protobuf:"bytes,1,opt,name=passengerFeedback,proto3" json:"passengerFeedback,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *DeleteByPassengerFeedbackIDResponse) Reset()         { *m = DeleteByPassengerFeedbackIDResponse{} }
func (m *DeleteByPassengerFeedbackIDResponse) String() string { return proto.CompactTextString(m) }
func (*DeleteByPassengerFeedbackIDResponse) ProtoMessage()    {}
func (*DeleteByPassengerFeedbackIDResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_7537c9ecc7dea878, []int{8}
}

func (m *DeleteByPassengerFeedbackIDResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteByPassengerFeedbackIDResponse.Unmarshal(m, b)
}
func (m *DeleteByPassengerFeedbackIDResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteByPassengerFeedbackIDResponse.Marshal(b, m, deterministic)
}
func (m *DeleteByPassengerFeedbackIDResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteByPassengerFeedbackIDResponse.Merge(m, src)
}
func (m *DeleteByPassengerFeedbackIDResponse) XXX_Size() int {
	return xxx_messageInfo_DeleteByPassengerFeedbackIDResponse.Size(m)
}
func (m *DeleteByPassengerFeedbackIDResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteByPassengerFeedbackIDResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteByPassengerFeedbackIDResponse proto.InternalMessageInfo

func (m *DeleteByPassengerFeedbackIDResponse) GetPassengerFeedback() *PassengerFeedback {
	if m != nil {
		return m.PassengerFeedback
	}
	return nil
}

func init() {
	proto.RegisterType((*PassengerFeedback)(nil), "feedback.PassengerFeedback")
	proto.RegisterType((*AddPassengerFeedbackRequest)(nil), "feedback.AddPassengerFeedbackRequest")
	proto.RegisterType((*AddPassengerFeedbackResponse)(nil), "feedback.AddPassengerFeedbackResponse")
	proto.RegisterType((*GetPassengerFeedbackIDRequest)(nil), "feedback.GetPassengerFeedbackIDRequest")
	proto.RegisterType((*GetPassengerFeedbackIDResponse)(nil), "feedback.GetPassengerFeedbackIDResponse")
	proto.RegisterType((*GetBookingCodeRequest)(nil), "feedback.GetBookingCodeRequest")
	proto.RegisterType((*GetBookingCodeResponse)(nil), "feedback.GetBookingCodeResponse")
	proto.RegisterType((*DeleteByPassengerFeedbackIDRequest)(nil), "feedback.DeleteByPassengerFeedbackIDRequest")
	proto.RegisterType((*DeleteByPassengerFeedbackIDResponse)(nil), "feedback.DeleteByPassengerFeedbackIDResponse")
}

func init() { proto.RegisterFile("feedback/feedbackpb/feedback.proto", fileDescriptor_7537c9ecc7dea878) }

var fileDescriptor_7537c9ecc7dea878 = []byte{
	// 378 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x54, 0x4f, 0x4f, 0xfa, 0x40,
	0x10, 0xfd, 0xf5, 0x47, 0x34, 0x32, 0x18, 0x0d, 0x1b, 0x34, 0x4d, 0xf1, 0x4f, 0xb3, 0x46, 0xe5,
	0xa0, 0x98, 0xe0, 0xc9, 0x78, 0x11, 0x24, 0x10, 0x4e, 0x9a, 0x1a, 0x2f, 0x26, 0x1e, 0x28, 0x1d,
	0x08, 0x41, 0xdb, 0x95, 0xad, 0x12, 0x13, 0x3f, 0x9b, 0x9f, 0xcd, 0x58, 0xd9, 0xdd, 0xc2, 0x96,
	0xd6, 0xa8, 0xb7, 0xee, 0xf4, 0xcd, 0x7b, 0x6f, 0x76, 0x5e, 0x16, 0x68, 0x1f, 0xd1, 0x73, 0xbb,
	0xbd, 0xd1, 0x89, 0xf8, 0x60, 0xae, 0xfc, 0xac, 0xb2, 0x71, 0x10, 0x06, 0x64, 0x45, 0x9c, 0x29,
	0x87, 0xe2, 0x75, 0x97, 0x73, 0xf4, 0x07, 0x38, 0x6e, 0x4d, 0x8b, 0xc4, 0x86, 0x82, 0x1b, 0x04,
	0xa3, 0xa1, 0x3f, 0xb8, 0x0c, 0x3c, 0x34, 0x0d, 0xdb, 0xa8, 0xe4, 0x9d, 0x78, 0xe9, 0x13, 0xc1,
	0x44, 0x5b, 0xa7, 0x69, 0xfe, 0xb7, 0x8d, 0xca, 0x92, 0x13, 0x2f, 0x11, 0x0b, 0xa4, 0x88, 0x99,
	0x8b, 0x08, 0x94, 0xa8, 0x0f, 0xe5, 0xba, 0xe7, 0x69, 0xba, 0x0e, 0x3e, 0x3d, 0x23, 0x0f, 0xc9,
	0x15, 0x94, 0x7c, 0x9c, 0x68, 0xbf, 0x23, 0x1f, 0x85, 0x5a, 0xb9, 0x2a, 0x87, 0xd1, 0x19, 0x12,
	0x1b, 0xe9, 0x05, 0x6c, 0x25, 0xeb, 0x71, 0x16, 0xf8, 0x3c, 0x9a, 0xc6, 0xc7, 0xc9, 0x8c, 0x4e,
	0xde, 0x89, 0x97, 0x68, 0x1d, 0xb6, 0xdb, 0x18, 0x6a, 0x0c, 0x9d, 0xa6, 0xf0, 0x3c, 0x77, 0x21,
	0x86, 0x76, 0x21, 0xf4, 0x1e, 0x76, 0x16, 0x51, 0x4c, 0x6d, 0x9c, 0x03, 0xf4, 0x65, 0xd5, 0x34,
	0xec, 0x5c, 0xd6, 0xb4, 0x31, 0x38, 0x3d, 0x83, 0x8d, 0x36, 0x86, 0x0d, 0xb5, 0xa3, 0x98, 0xb3,
	0xf4, 0x65, 0xd2, 0x1e, 0x6c, 0xce, 0xb7, 0x4e, 0x1d, 0x75, 0xa0, 0xc8, 0x7e, 0xb2, 0x06, 0xbd,
	0x8b, 0xb6, 0x80, 0x36, 0xf1, 0x01, 0x43, 0x6c, 0xbc, 0xfe, 0xea, 0x1a, 0x19, 0xec, 0xa5, 0xf2,
	0xfc, 0xb9, 0xf3, 0xda, 0x7b, 0x0e, 0xd6, 0xc5, 0xe1, 0x06, 0xc7, 0x2f, 0xc3, 0x1e, 0x92, 0x01,
	0x94, 0x92, 0x12, 0x45, 0xf6, 0x15, 0x77, 0x4a, 0xc2, 0xad, 0x83, 0x2c, 0xd8, 0xd7, 0x14, 0xf4,
	0x1f, 0x79, 0x8c, 0x76, 0x93, 0x30, 0x29, 0x39, 0x54, 0x1c, 0xa9, 0xd1, 0xb4, 0x2a, 0xd9, 0x40,
	0x29, 0x77, 0x0b, 0x6b, 0xb3, 0x51, 0x20, 0xbb, 0x33, 0xdd, 0x7a, 0xbe, 0x2c, 0x7b, 0x31, 0x40,
	0xd2, 0xbe, 0x41, 0x39, 0x65, 0x69, 0xe4, 0x48, 0x51, 0x64, 0x67, 0xc4, 0x3a, 0xfe, 0x26, 0x5a,
	0xa8, 0x37, 0x56, 0xef, 0x40, 0x3d, 0x85, 0xee, 0x72, 0xf4, 0x04, 0x9e, 0x7e, 0x04, 0x00, 0x00,
	0xff, 0xff, 0xf5, 0x64, 0x7d, 0xd9, 0x28, 0x05, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// FeedbackServiceClient is the client API for FeedbackService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type FeedbackServiceClient interface {
	AddPassengerFeedback(ctx context.Context, in *AddPassengerFeedbackRequest, opts ...grpc.CallOption) (*AddPassengerFeedbackResponse, error)
	GetPassengerFeedbackID(ctx context.Context, in *GetPassengerFeedbackIDRequest, opts ...grpc.CallOption) (*GetPassengerFeedbackIDResponse, error)
	GetBookingCode(ctx context.Context, in *GetBookingCodeRequest, opts ...grpc.CallOption) (*GetBookingCodeResponse, error)
	DeleteByPassengerFeedbackID(ctx context.Context, in *DeleteByPassengerFeedbackIDRequest, opts ...grpc.CallOption) (*DeleteByPassengerFeedbackIDResponse, error)
}

type feedbackServiceClient struct {
	cc *grpc.ClientConn
}

func NewFeedbackServiceClient(cc *grpc.ClientConn) FeedbackServiceClient {
	return &feedbackServiceClient{cc}
}

func (c *feedbackServiceClient) AddPassengerFeedback(ctx context.Context, in *AddPassengerFeedbackRequest, opts ...grpc.CallOption) (*AddPassengerFeedbackResponse, error) {
	out := new(AddPassengerFeedbackResponse)
	err := c.cc.Invoke(ctx, "/feedback.FeedbackService/AddPassengerFeedback", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *feedbackServiceClient) GetPassengerFeedbackID(ctx context.Context, in *GetPassengerFeedbackIDRequest, opts ...grpc.CallOption) (*GetPassengerFeedbackIDResponse, error) {
	out := new(GetPassengerFeedbackIDResponse)
	err := c.cc.Invoke(ctx, "/feedback.FeedbackService/GetPassengerFeedbackID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *feedbackServiceClient) GetBookingCode(ctx context.Context, in *GetBookingCodeRequest, opts ...grpc.CallOption) (*GetBookingCodeResponse, error) {
	out := new(GetBookingCodeResponse)
	err := c.cc.Invoke(ctx, "/feedback.FeedbackService/GetBookingCode", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *feedbackServiceClient) DeleteByPassengerFeedbackID(ctx context.Context, in *DeleteByPassengerFeedbackIDRequest, opts ...grpc.CallOption) (*DeleteByPassengerFeedbackIDResponse, error) {
	out := new(DeleteByPassengerFeedbackIDResponse)
	err := c.cc.Invoke(ctx, "/feedback.FeedbackService/DeleteByPassengerFeedbackID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// FeedbackServiceServer is the server API for FeedbackService service.
type FeedbackServiceServer interface {
	AddPassengerFeedback(context.Context, *AddPassengerFeedbackRequest) (*AddPassengerFeedbackResponse, error)
	GetPassengerFeedbackID(context.Context, *GetPassengerFeedbackIDRequest) (*GetPassengerFeedbackIDResponse, error)
	GetBookingCode(context.Context, *GetBookingCodeRequest) (*GetBookingCodeResponse, error)
	DeleteByPassengerFeedbackID(context.Context, *DeleteByPassengerFeedbackIDRequest) (*DeleteByPassengerFeedbackIDResponse, error)
}

// UnimplementedFeedbackServiceServer can be embedded to have forward compatible implementations.
type UnimplementedFeedbackServiceServer struct {
}

func (*UnimplementedFeedbackServiceServer) AddPassengerFeedback(ctx context.Context, req *AddPassengerFeedbackRequest) (*AddPassengerFeedbackResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddPassengerFeedback not implemented")
}
func (*UnimplementedFeedbackServiceServer) GetPassengerFeedbackID(ctx context.Context, req *GetPassengerFeedbackIDRequest) (*GetPassengerFeedbackIDResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetPassengerFeedbackID not implemented")
}
func (*UnimplementedFeedbackServiceServer) GetBookingCode(ctx context.Context, req *GetBookingCodeRequest) (*GetBookingCodeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetBookingCode not implemented")
}
func (*UnimplementedFeedbackServiceServer) DeleteByPassengerFeedbackID(ctx context.Context, req *DeleteByPassengerFeedbackIDRequest) (*DeleteByPassengerFeedbackIDResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteByPassengerFeedbackID not implemented")
}

func RegisterFeedbackServiceServer(s *grpc.Server, srv FeedbackServiceServer) {
	s.RegisterService(&_FeedbackService_serviceDesc, srv)
}

func _FeedbackService_AddPassengerFeedback_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddPassengerFeedbackRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FeedbackServiceServer).AddPassengerFeedback(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/feedback.FeedbackService/AddPassengerFeedback",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FeedbackServiceServer).AddPassengerFeedback(ctx, req.(*AddPassengerFeedbackRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FeedbackService_GetPassengerFeedbackID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetPassengerFeedbackIDRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FeedbackServiceServer).GetPassengerFeedbackID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/feedback.FeedbackService/GetPassengerFeedbackID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FeedbackServiceServer).GetPassengerFeedbackID(ctx, req.(*GetPassengerFeedbackIDRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FeedbackService_GetBookingCode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetBookingCodeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FeedbackServiceServer).GetBookingCode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/feedback.FeedbackService/GetBookingCode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FeedbackServiceServer).GetBookingCode(ctx, req.(*GetBookingCodeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FeedbackService_DeleteByPassengerFeedbackID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteByPassengerFeedbackIDRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FeedbackServiceServer).DeleteByPassengerFeedbackID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/feedback.FeedbackService/DeleteByPassengerFeedbackID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FeedbackServiceServer).DeleteByPassengerFeedbackID(ctx, req.(*DeleteByPassengerFeedbackIDRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _FeedbackService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "feedback.FeedbackService",
	HandlerType: (*FeedbackServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "AddPassengerFeedback",
			Handler:    _FeedbackService_AddPassengerFeedback_Handler,
		},
		{
			MethodName: "GetPassengerFeedbackID",
			Handler:    _FeedbackService_GetPassengerFeedbackID_Handler,
		},
		{
			MethodName: "GetBookingCode",
			Handler:    _FeedbackService_GetBookingCode_Handler,
		},
		{
			MethodName: "DeleteByPassengerFeedbackID",
			Handler:    _FeedbackService_DeleteByPassengerFeedbackID_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "feedback/feedbackpb/feedback.proto",
}
